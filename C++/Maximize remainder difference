// C++ program for the above approach
#include <bits/stdc++.h>
using namespace std;
  
// Function to find the required
// maximum difference
void maxProductDifference(vector<int>& arr)
{
  
    // Base Case
    if (arr.size() < 4) {
        cout << "-1\n";
        return;
    }
  
    // Sort the array
    sort(arr.begin(), arr.end());
  
    // First pair
    int first = arr[1] % arr[0];
  
    // Second pair
    int second = arr[arr.size() - 2]
                 % arr[arr.size() - 1];
  
    // Print the result
    cout << second - first;
  
    return;
}
  
// Driver Code
int main()
{
    vector<int> arr = { 1, 2, 4, 6, 8, 3, 5, 7 };
  
    maxProductDifference(arr);
  
    return 0;
}
